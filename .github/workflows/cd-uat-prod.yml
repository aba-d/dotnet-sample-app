name: CD to UAT/PROD

on:
  workflow_run:
    workflows: ["CI-Dev Pipeline"]
    types:
      - completed

permissions:
  security-events: write
  actions: read
  contents: read
  packages: write
  id-token: write

jobs:

  # ------------------------
  # Step 1Ô∏è‚É£ Download IMAGE_TAG artifact from CI workflow
  # ------------------------
  download-image-tag:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    outputs:                           # <-- Job-level output
      IMAGE_TAG: ${{ steps.load-image-tag.outputs.IMAGE_TAG }}
    steps:
      - name: Check CI variables
        run : |-
          echo "üöÄ CD triggered automatically after CI success"
          echo "Previous CI run ID: ${{ github.event.workflow_run.id }}"
          echo "CI run conclusion: ${{ github.event.workflow_run.conclusion }}"
          echo "CI run branch: ${{ github.event.workflow_run.head_branch }}"
          echo "CI run SHA: ${{ github.event.workflow_run.head_sha }}"

      - name: Download docker-image-tag artifact
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Downloading docker-image-tag artifact...${{ github.event.workflow_run.id }}"
          mkdir -p ./artifacts
          gh run download ${{ github.event.workflow_run.id }} \
            --repo ${{ github.repository }} \
            --name docker-image-tag \
            --dir ./artifacts
          ls -la ./artifacts

      - name: Load Docker Image Tag
        id: load-image-tag
        run: |
          unzip -o ./artifacts/docker-image-tag.zip -d ./artifacts
          ls -la ./artifacts
          source ./artifacts/image-tag.env
          echo "Loaded IMAGE_TAG: $IMAGE_TAG"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT

  # ------------------------
  # Step 2Ô∏è‚É£ Deploy to QA using the IMAGE_TAG
  # ------------------------
  ecs-deploy-QA:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    needs: download-image-tag
    name: Deploy to QA
    uses: aba-enterprise/enterprise-ci-templates/.github/workflows/ecs-deployment-templatebg.yml@Feature-Deployment
    with:
      environment: "dev"
      app-language: "csharp"
      extra-env: '[{"name":"ASPNETCORE_ENVIRONMENT","value":"Development"}]'
      image-tag: ${{ needs.download-image-tag.outputs.IMAGE_TAG }}
    secrets: inherit

  # ------------------------
  # Step 3Ô∏è‚É£ Switch Traffic to Live
  # ------------------------
  Switch-Traffic:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    needs: ecs-deploy-QA
    name: Switch Traffic to Live
    uses: aba-enterprise/enterprise-ci-templates/.github/workflows/manual-promotion.yml@Feature-Deployment
    with:
      environment: "dev"
      temp-listener-arn: ${{ needs.ecs-deploy-QA.outputs.TEMP_LISTENER_ARN }}
      idle-tg: ${{ needs.ecs-deploy-QA.outputs.IDLE_TG }}
      idle-service: ${{ needs.ecs-deploy-QA.outputs.IDLE_SERVICE }}
      is-first-deploy: ${{ fromJSON(needs.ecs-deploy-QA.outputs.IS_FIRST_DEPLOY) }}
      live-service: ${{ needs.ecs-deploy-QA.outputs.LIVE_SERVICE }}
    secrets: inherit
